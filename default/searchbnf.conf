[jiracreate]
syntax = DATADOG SEND=<1|0> TYPE=<gauge|increment> field1 as metric1 [ field2 as metric2] by tag1,tag2
alias = dd
shortdesc = sends sets of metrics to datadog, with the time as the current run time.
description = \
    Allows someone to send a set of metrics grouped by tags to a datadog agent. \
    The currently supported types are gauge(default) and increment. \
    The time is taken as the execution time of the command. \
    for now, you must explicitly set the send option to 1 for this to be actually sent. \
    Otherwise just a report is generated that shows the metrics and values that are sent. \
    You should not rely on datadog evaluating and calculations (sum,max,avg) as this should be prepared by stats and piped to datadog. \
    If a tag is a field name, the value of the field name will be used and produce a tag tag_name:field_value. \
    If a tag is not a field name, the metric is appended with just the tag_name. \
    Currently all metrics are appended with namespace 'test'
comment1 = \
    Get the total count of views by HTTP method
example1 = \
    index = _internal | stats count by method | datadog send=1 count as splunk.views by method
comment2 = \
    Determine the max size and number of events for each splunk index
example2 = \
    | rest /services/data/indexes | eval index_name = title | \
        datadog totalEventCount as splunk.index.eventcount maxTotalDataSizeMB as splunk.index.max_size by index_name
category = reporting
appears-in = 1.4
maintainer = tclancy
usage = private
tags = searchcommands_app

[jiracomment]
syntax = DATADOG_EVENT SEND=<1|0> TITLE=<title> TEXT=<text> PRIORITY=<priority> ALERT_TYPE=[warning|success|info|error] HOSTNAME=<hostname> SOURCE_TYPE_NAME=<sourcetypename> by tag1,tag2
alias = ddevent
shortdesc = sends sets of events to datadog, event time defaults to current run time.
description = \
    Send a set of events to datadog.  by default the alert type is set to 'splunk', but this can be overridden with parameter source_type_name
comment1 = \
    Send and alert for all the indexes
example1 = \
    | rest /services/data/indexes | eval alert_title = title . " - over limit" | datadogevent title=alert_title text = "index is over the limit"
example2 = \
    index=_* | stats count by index | where count > 200 | datadogevent title="index over limit" text="Index has reached limit" by index
category = reporting
appears-in = 1.4
maintainer = tclancy
usage = private
tags = searchcommands_app